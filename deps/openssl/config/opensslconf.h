/*
  In OpenSSL, opensslconf.h was generated by Configure script
  with specifying a target argument, where it includes sevral defines
  that depend on OS and architecture platform.

  In iojs, we statically mapped --dest-os and --dest-cpu options in
  configure to the target of Configure in OpenSSL. The opensslconf.h
  in each target was created in advance by typing
  `deps/openssl/openssl/Configure {target}` and copied into
  `deps/openssl/conf/archs/{target}/opensslconf.h` (See note below).

  `deps/openssl/conf/openssconf.h` includes each file according to its
  target by checking pre-defined compiler macros.

  Here is a map table of configure options in iojs and target of
  Configure in OpenSSL.

  configure options                 : OpenSSL Configure target
  --dest-os=linux,   --dest-cpu=ia32:  linux-elf
  --dest-os=linux,   --dest-cpu=x32:   linux-x32
  --dest-os=linux,   --dest-cpu=x64:   linux-x86_64
  --dest-os=linux,   --dest-cpu=arm:   linux-armv4
  --dest-os=linux,   --dest-cpu=arm64: linux-aarch64
  --dest-os=mac,     --dest-cpu=ia32:  darwin-i386-cc
  --dest-os=mac,     --dest-cpu=x64:   darwin64-x86-cc
  --dest-os=win,     --dest-cpu=ia32:  VC-WIN32
  --dest-os=win,     --dest-cpu=x64:   VC-WIN64A
  --dest-os=freebsd, --dest-cpu=ia32:  BSD-x86
  --dest-os=freebsd, --dest-cpu=x64:   BSD-x86_64
  --dest-os=openbsd, --dest-cpu=ia32:  BSD-x86
  --dest-os=openbsd, --dest-cpu=x64:   BSD-x86_64
  --dest-os=solaris, --dest-cpu=ia32:  solaris-x86-gcc
  --dest-os=solaris, --dest-cpu=x64:   solaris64-x86_64-gcc
  others: copy of openssl/crypto/openssconf.h.in that has no arch dependencies

  Note:
  We should remove OPENSSL_CPUID_OBJ define in opensslconf.h
  because it causes build error when --openss-no-asm option is
  specified.
  Instead, the OPENSSL_CPUID_OBJ is defined in
  `deps/openssl/openssl.gypi` according to the configure options.
*/


#if defined(__linux__) && defined(__i386__)
  /* linux-elf */
  #include "./archs/linux-elf/opensslconf.h"
#elif defined(__linux__) && defined(__x86_64__) && defined(__ILP32__)
  /* linux-x32 */
  #include "./archs/linux-x32/opensslconf.h"
#elif defined(__linux__) && defined(__x86_64__)
  /* linux-x86_64 */
  #include "./archs/linux-x86_64/opensslconf.h"
#elif defined(__linux__) && defined(__arm__)
  /* linux-armv4 */
  #include "./archs/linux-armv4/opensslconf.h"
#elif defined(__linux__) && defined(__aarch64__)
  /* linux-aarch64 */
  #include "./archs/linux-aarch64/opensslconf.h"
#elif defined(__APPLE__) && defined(__MACH__) && defined(__i386__)
  /* darwin-i386-cc */
  #include "./archs/darwin-i386-cc/opensslconf.h"
#elif defined(__APPLE__) && defined(__MACH__) && defined(__x86_64__)
  /* darwin64-x86-cc */
  #include "./archs/darwin64-x86_64-cc/opensslconf.h"
#elif defined(_WIN32) && defined(_M_IX86)
  /* VC-WIN32 */
  #include "./archs/VC-WIN32/opensslconf.h"
#elif defined(_WIN64) && defined(_M_X64)
  /* VC-WIN64A */
  #include "./archs/VC-WIN64A/opensslconf.h"
#elif (defined(__FreeBSD__) || defined(__OpenBSD__)) && defined(__i386__)
  /* BSD-x86 */
  #include "./archs/BSD-x86/opensslconf.h"
#elif (defined(__FreeBSD__) || defined(__OpenBSD__)) && defined(__x86_64__)
  /* BSD-x86_64 */
  #include "./archs/BSD-x86_64/opensslconf.h"
#elif defined(__sun) && defined(__i386__)
  /* solaris-x86-gcc */
  #include "./archs/solaris-x86-gcc/opensslconf.h"
#elif defined(__sun) && defined(__x86_64__)
  /* solaris64-x86_64-gcc */
  #include "./archs/solaris64-x86_64-gcc/opensslconf.h"
#else
  /* others */
  #include "./archs/others/opensslconf.h"
#endif
